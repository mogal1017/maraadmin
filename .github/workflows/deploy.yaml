name: Build and Deploy Docker Image

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: trim-script-431704-d9
  REGION: us-central1
  DOCKER_IMAGE_URL: us-central1-docker.pkg.dev/trim-script-431704-d9/action/actionadmin

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Create Dockerfile
        run: |
          echo "FROM node:16-alpine" > Dockerfile
          echo "WORKDIR /app" >> Dockerfile
          echo "COPY package*.json ./" >> Dockerfile
          echo "RUN npm install --production" >> Dockerfile
          echo "COPY . ./" >> Dockerfile
          echo "RUN npm run build" >> Dockerfile
          echo "CMD [\"npx\", \"serve\", \"-s\", \"dist\"]" >> Dockerfile

      - name: Google Cloud Auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Docker to use gcloud command-line tool as a credential helper
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev

      - name: Build and Tag Docker Image
        run: |
          # Build the Docker image
          docker build -t ${{ env.DOCKER_IMAGE_URL }}:latest .
          docker tag ${{ env.DOCKER_IMAGE_URL }}:latest ${{ env.DOCKER_IMAGE_URL }}:${{ github.sha }}

      - name: Push Docker Image
        run: |
          docker push ${{ env.DOCKER_IMAGE_URL }}:latest
          docker push ${{ env.DOCKER_IMAGE_URL }}:${{ github.sha }}

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ secrets.CLOUD_RUN_SERVICE }} \
            --image ${{ env.DOCKER_IMAGE_URL }}:latest \
            --platform managed \
            --region ${{ env.REGION }} \
            --allow-unauthenticated


